// 引入ComposingBuild包名
import com.example.version_plugin.ComposingAndroidX
import com.example.version_plugin.ComposingBuildVersions
import com.example.version_plugin.ComposingDependencies
import com.example.version_plugin.ComposingJetpack

plugins {
//    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    // ComposingBuild依赖插件
    id 'version-plugin'
}

// only buildscript {}, pluginManagement {} and other plugins {} script blocks are allowed before plugins {} blocks, no other statements are allowed
if (isModulePictureSelectorBuildModule.toBoolean()) {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}

//ARouter配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    namespace 'com.liang.module_picture_selector'
//    compileSdk 33
    // ComposingBuild-使用Plugin中声明的三方库
    compileSdk ComposingBuildVersions.compileSdk

    defaultConfig {
//        minSdk 21
        minSdk ComposingBuildVersions.minSdk
        targetSdk ComposingBuildVersions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // 开启dataBinding
    buildFeatures {
        dataBinding true
    }
    // 开启viewBinding
    viewBinding {
        enabled = true
    }

    // 配置清单文件,位置需要复制一份当前的清单文件到main/alone(可以随便取)目录下,在清单文件中提供入口
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isModulePictureSelectorBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
                    exclude 'src/main/alone/*'
                }
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation project(path: ':module_base')
    implementation project(path: ':module_route')

    // ARoute路由
    kapt(ComposingDependencies.aRouterCompiler)
}